{"version":3,"sources":["App.js","sources.js","reportWebVitals.js","index.js"],"names":["map","sources","basins","type","layout","paint","glaciers","himatibetmap","conveyances","hydropower","icon","reservoirs","outlets","initialView","lng","lat","zoom","addSource","key","source","data","addLayer","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","App","props","classes","useTheme","useState","setView","menuOpen","setMenuOpen","useEffect","mapboxgl","accessToken","Map","container","style","center","addControl","NavigationControl","on","newView","getCenter","toFixed","getZoom","Object","keys","forEach","loadImage","error","image","addImage","e","features","queryRenderedFeatures","point","layers","length","feature","Popup","offset","setLngLat","geometry","coordinates","setHTML","properties","title","description","addTo","Marker","setPopup","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","Drawer","variant","anchor","open","paper","FormGroup","FormControlLabel","control","Checkbox","checked","onChange","name","label","height","src","id","top","bottom","left","right","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e64ad120.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js';\r\nimport './App.css';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport {Button, Checkbox, FormControlLabel, FormGroup} from \"@material-ui/core\";\r\nimport {CheckBox} from \"@material-ui/icons\";\r\nimport sources from './sources';\r\n\r\nconst initialView = {lng: 79.736, lat: 30.4, zoom: 7};\r\nlet map;\r\n\r\n\r\nconst addSource = (map, key, source) => {\r\n    const data = `/static/data/${key}.geojson`;\r\n    map.addSource(key, {type: 'geojson', data});\r\n    map.addLayer(\r\n        {\r\n            'id': key,\r\n            'type': source.type,\r\n            'source': key,\r\n            'paint': source.paint || {},\r\n            'layout': source.layout || {}\r\n        }\r\n    )\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nconst App = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [view, setView] = useState(initialView);\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        mapboxgl.accessToken = 'pk.eyJ1IjoiZHJoZWluaGVpbWVyIiwiYSI6ImNpeGFueGdtdTAwOWQyeXFmcjIxNGxhdGsifQ.ezx3wWVzhdqh9Esn1q_mfA';\r\n        map = new mapboxgl.Map({\r\n            container: 'mapbox',\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [initialView.lng, initialView.lat],\r\n            zoom: initialView.zoom\r\n        });\r\n\r\n        map.addControl(new mapboxgl.NavigationControl());\r\n\r\n        map.on('move', () => {\r\n            const newView = {\r\n                lng: map.getCenter().lng.toFixed(4),\r\n                lat: map.getCenter().lat.toFixed(4),\r\n                zoom: map.getZoom().toFixed(2)\r\n            };\r\n            setView(newView);\r\n        });\r\n\r\n        map.on('load', () => {\r\n            Object.keys(sources).forEach(key => {\r\n                const source = sources[key];\r\n                if (source.type === 'symbol') {\r\n                    map.loadImage(`/static/icons/${source.icon}`, (error, image) => {\r\n                        map.addImage(key, image);\r\n                        addSource(map, key, source);\r\n                    });\r\n                } else {\r\n                    addSource(map, key, source);\r\n                }\r\n            })\r\n        });\r\n\r\n        map.on('click', function (e) {\r\n            const features = map.queryRenderedFeatures(e.point, {\r\n                layers: ['hydropower'] // replace this with the name of the layer\r\n            });\r\n\r\n            if (!features.length) {\r\n                return;\r\n            }\r\n\r\n            const feature = features[0];\r\n\r\n            const popup = new mapboxgl.Popup({offset: [0, -15]})\r\n                .setLngLat(feature.geometry.coordinates)\r\n                .setHTML('<h3>' + feature.properties.title + '</h3><p>' + feature.properties.description + '</p>')\r\n                .addTo(map);\r\n        });\r\n\r\n        // new mapboxgl.Marker()\r\n        //     .setLngLat([79.73568772471732, 30.400077489299015])\r\n        //     .setPopup(new mapboxgl.Popup({offset: 25}).setText(\r\n        //         'Approximate source of flood.'\r\n        //     ))\r\n        //     .addTo(map);\r\n\r\n        new mapboxgl.Marker()\r\n            .setLngLat([79.73568772471732, 30.400077489299015])\r\n            .setPopup(new mapboxgl.Popup({offset: 25}).setHTML(\r\n                \"Approximate source of flood. \" +\r\n                \"(<a href='https://theprint.in/science/satellite-images-reveal-550m-scar-left-by-uttarakhand-landslide-in-nanda-ghunti-glacier/603123/'>source</a>)\"\r\n            ))\r\n            .addTo(map);\r\n\r\n        // new mapboxgl.Marker()\r\n        //     .setLngLat([79.693055245675, 30.48755135276432])\r\n        //     .setPopup(new mapboxgl.Popup({offset: 25}).setText(\r\n        //         'Raini village, Chamoli district, Uttarakhand.'\r\n        //     ))\r\n        //     .addTo(map);\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={() => setMenuOpen(!menuOpen)}>\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    {/*<Typography variant=\"h6\" className={classes.title}>*/}\r\n                    {/*    News*/}\r\n                    {/*</Typography>*/}\r\n                    {/*<Button color=\"inherit\">Login</Button>*/}\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={menuOpen}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <IconButton onClick={() => setMenuOpen(false)}>\r\n                    <ChevronLeftIcon/>\r\n                </IconButton>\r\n                <FormGroup style={{padding: 10}}>\r\n                    {Object.keys(sources).map(key => {\r\n                        const source = sources[key];\r\n                        return <FormControlLabel\r\n                            key={key}\r\n                            control={<Checkbox checked={true} onChange={null} name={key}/>}\r\n                            label={<div>\r\n                                {source.type === 'symbol' ?\r\n                                    <img width={25} height={25} aria-label={key} src={`/static/icons/${source.icon}`}/> : null}\r\n                                <span>{key}</span>\r\n                            </div>}\r\n                        />\r\n                    })}\r\n                </FormGroup>\r\n                <div>\r\n                    Source attribution forthcoming.\r\n                </div>\r\n            </Drawer>\r\n\r\n            <div id=\"mapbox\" style={{position: \"absolute\", top: 64, bottom: 0, left: menuOpen ? drawerWidth : 0, right: 0}}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const sources = {\r\n    basins: {\r\n        type: 'line',\r\n        layout: {},\r\n        paint: {\r\n            'line-color': '#002bab',\r\n            'line-width': 3,\r\n            'line-opacity': 1.0\r\n        }\r\n    },\r\n    glaciers: {\r\n        type: 'fill',\r\n        layout: {},\r\n        paint: {\r\n            'fill-color': '#fff',\r\n            'fill-opacity': 0.9,\r\n            'fill-outline-color': '#000'\r\n        }\r\n    },\r\n    himatibetmap: {\r\n        type: \"line\",\r\n        paint: {\r\n            'line-color': 'red',\r\n            'line-width': 2,\r\n            'line-opacity': 0.8\r\n        }\r\n    },\r\n    conveyances: {\r\n        type: \"line\",\r\n        paint: {\r\n            'line-color': 'blue',\r\n            'line-width': 3,\r\n            'line-opacity': 0.8\r\n        }\r\n    },\r\n    hydropower: {\r\n        type: \"symbol\",\r\n        icon: \"square-red-11.png\",\r\n        layout: {\r\n            'icon-image': 'hydropower',\r\n            // 'icon-size': 0.1\r\n        }\r\n    },\r\n    reservoirs: {\r\n        type: \"symbol\",\r\n        icon: \"triangle-blue-15.png\",\r\n        layout: {\r\n            'icon-image': 'reservoirs',\r\n            // 'icon-size': 0.1\r\n        }\r\n    },\r\n    outlets: {\r\n        type: \"circle\"\r\n    },\r\n}\r\n\r\nexport default sources;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}